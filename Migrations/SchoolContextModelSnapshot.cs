// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityRunningTeam.Data;

namespace UniversityRunningTeam.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversityRunningTeam.Models.Athlete", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dob");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<int?>("Gender");

                    b.Property<int>("Height");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<int>("Weight");

                    b.HasKey("ID");

                    b.ToTable("Athlete");
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.Coach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("HireDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.Event", b =>
                {
                    b.Property<int>("EventID");

                    b.Property<int>("FieldID");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.HasKey("EventID");

                    b.HasIndex("FieldID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.EventAssignment", b =>
                {
                    b.Property<int>("EventID");

                    b.Property<int>("CoachID");

                    b.HasKey("EventID", "CoachID");

                    b.HasIndex("CoachID");

                    b.ToTable("EventAssignment");
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.Field", b =>
                {
                    b.Property<int>("FieldID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<int?>("CoachID");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("FieldID");

                    b.HasIndex("CoachID");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.Trial", b =>
                {
                    b.Property<int>("TrialID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AthleteID");

                    b.Property<int>("EventID");

                    b.Property<int?>("Place");

                    b.HasKey("TrialID");

                    b.HasIndex("AthleteID");

                    b.HasIndex("EventID");

                    b.ToTable("Trial");
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.Event", b =>
                {
                    b.HasOne("UniversityRunningTeam.Models.Field", "Field")
                        .WithMany("Events")
                        .HasForeignKey("FieldID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.EventAssignment", b =>
                {
                    b.HasOne("UniversityRunningTeam.Models.Coach", "Coach")
                        .WithMany("EventAssignment")
                        .HasForeignKey("CoachID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UniversityRunningTeam.Models.Event", "Event")
                        .WithMany("EventAssignments")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.Field", b =>
                {
                    b.HasOne("UniversityRunningTeam.Models.Coach", "Administrator")
                        .WithMany()
                        .HasForeignKey("CoachID");
                });

            modelBuilder.Entity("UniversityRunningTeam.Models.Trial", b =>
                {
                    b.HasOne("UniversityRunningTeam.Models.Athlete")
                        .WithMany("Trials")
                        .HasForeignKey("AthleteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UniversityRunningTeam.Models.Event")
                        .WithMany("Trials")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
